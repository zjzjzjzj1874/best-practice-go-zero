// Code generated by goctl. DO NOT EDIT.
package types

type OperationTimes struct {
	CreatedTime int64 `json:"created_time" bson:"created_time" description:"创建时间"`
	UpdatedTime int64 `json:"updated_time" bson:"updated_time" description:"更新时间"`
}

type QueryOption struct {
	Page          int      `form:"page,default=1,optional" description:"当前页"`
	PageSize      int      `form:"page_size,default=10,optional" description:"每页条数"`
	SortKeys      string   `form:"sort_keys,default=-created_time,optional" description:"排序键"` // "key1,-key2"
	ProjectFields []string `form:"project_fields,optional" description:"查询键"`
	ExcludeFields []string `form:"exclude_fields,optional" description:"不查询的值"`
}

type QueryOptionInBody struct {
	Page          int      `json:"page,default=1,optional" description:"当前页"`
	PageSize      int      `json:"page_size,default=10,optional" description:"每页条数"`
	SortKeys      string   `json:"sort_keys,default=-created_time,optional" description:"排序键"` // "key1,-key2"
	ProjectFields []string `json:"project_fields,optional" description:"查询键"`
	ExcludeFields []string `json:"exclude_fields,optional" description:"不查询的值"`
}

type Operator struct {
	ID   string `json:"id" description:"操作人ID"`
	Name string `json:"name" description:"操作人名称"`
}

type LivenessRequest struct {
}

type LivenessResponse struct {
}

type MigrateRequest struct {
	TableNames []string `json:"table_names,omitempty" description:"更新表名列表"`
}

type MigrateResponse struct {
}

type RabbitmqProRequest struct {
	Name    string   `json:"name"`    // 姓名
	Age     int      `json:"age"`     // 年龄
	Hobbies []string `json:"hobbies"` // 爱好
}

type RabbitmqProResponse struct {
}

type ListReq struct {
	CreatedTime []string `json:"created_time,optional" description:"入库时间"`
	ID          string   `json:"id,optional" description:"内容id"`
	Name        string   `json:"name,optional" validate:"min=3,max=10" description:"名称"`
}

type Response struct {
}

type MongoTest struct {
	ID        string   `bson:"_id" json:"id" description:"主键ID"`
	TestName  string   `bson:"test_name" json:"test_name" description:"测试名称"`
	CreatedAt int64    `bson:"created_at" json:"created_at" description:"创建时间"`
	Hobbies   []string `bson:"hobbies" json:"hobbies" description:"爱好"`
}

type ManualExecTaskRequest struct {
	Name string `json:"name" description:"表达式任务名称"`
}

type ManualExecTaskResponse struct {
	Msg string `json:"msg" description:"返回信息"`
}
