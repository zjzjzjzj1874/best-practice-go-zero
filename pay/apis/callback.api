syntax = "v1"

type (
	WechatNotifyReq struct {
    	ID           string    `json:"id" description:"通知的唯一ID"`
    	CreateTime   string `json:"create_time" description:"通知创建的时间，遵循rfc3339标准格式"`
    	//CreateTime   time.Time `json:"create_time" description:"通知创建的时间，遵循rfc3339标准格式"`
    	ResourceType string    `json:"resource_type" description:"通知的资源数据类型，支付成功通知为encrypt-resource"`
    	EventType    string    `json:"event_type" description:"通知的类型，支付成功通知的类型为TRANSACTION.SUCCESS"`
    	Summary      string    `json:"summary" description:"回调摘要"`
    	Resource     Resource  `json:"resource" description:"通知资源数据,json格式"`
    }
    Resource struct {
        OriginalType   string `json:"original_type" description:"原始回调类型，为transaction"`
        Algorithm      string `json:"algorithm" description:"对开启结果数据进行加密的加密算法，目前只支持AEAD_AES_256_GCM"`
        Ciphertext     string `json:"ciphertext" description:"Base64编码后的开启/停用结果数据密文"`
        AssociatedData string `json:"associated_data,optional,omitempty" description:"附加数据"`
        Nonce          string `json:"nonce" description:"加密使用的随机串"`
    }
)

@server(
	middleware: Log
	prefix: pay/callback
	group: callback
)

service pay-api {
	@doc summary: 微信支付回调接口
	@handler CallbackWx
	post /wechat(WechatNotifyReq) returns()

	@doc summary: 支付宝支付回调接口
	@handler CallbackAli
	post /ali() returns()
}