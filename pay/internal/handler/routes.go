// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	callback "github.com/zjzjzjzj1874/best-pracrice-go-zero/pay/internal/handler/callback"
	liveness "github.com/zjzjzjzj1874/best-pracrice-go-zero/pay/internal/handler/liveness"
	pay "github.com/zjzjzjzj1874/best-pracrice-go-zero/pay/internal/handler/pay"
	swagger "github.com/zjzjzjzj1874/best-pracrice-go-zero/pay/internal/handler/swagger"
	"github.com/zjzjzjzj1874/best-pracrice-go-zero/pay/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/liveness",
				Handler: liveness.LivenessHandler(serverCtx),
			},
		},
		rest.WithPrefix("/pay"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/swagger",
				Handler: swagger.SwaggerHandler(serverCtx),
			},
		},
		rest.WithPrefix("/pay"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Log},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: pay.PayHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: pay.PayResultHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/pay"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Log},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/wechat",
					Handler: callback.CallbackWxHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/ali",
					Handler: callback.CallbackAliHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/pay/callback"),
	)
}
