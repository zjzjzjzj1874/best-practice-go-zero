// Code generated by goctl. DO NOT EDIT.
package types

type PayReq struct {
	ID        int    `path:"id" description:"待支付订单号" validate:"required"`
	PayChanel int    `json:"pay_channel" description:"支付渠道1微信 2支付宝" validate:"oneof=1 2"`
	ReturnUrl string `json:"return_url,optional" description:"支付后跳转链接"`
}

type PayQueryReq struct {
	ID int `path:"id" description:"待支付订单号" validate:"required"`
}

type PayResp struct {
	PayUrl string `json:"pay_url" description:"支付链接:支付宝直接跳转,微信是个二维码,需要解析才能使用"`
}

type PayResultResp struct {
	TradeNo    string `json:"trade_no" description:"交易号"`
	OrderNo    string `json:"order_no" description:"订单号"`
	OrderState int    `json:"order_state" description:"订单支付结果"`
}

type WechatNotifyReq struct {
	ID           string   `json:"id" description:"通知的唯一ID"`
	CreateTime   string   `json:"create_time" description:"通知创建的时间，遵循rfc3339标准格式"`
	ResourceType string   `json:"resource_type" description:"通知的资源数据类型，支付成功通知为encrypt-resource"`
	EventType    string   `json:"event_type" description:"通知的类型，支付成功通知的类型为TRANSACTION.SUCCESS"`
	Summary      string   `json:"summary" description:"回调摘要"`
	Resource     Resource `json:"resource" description:"通知资源数据,json格式"`
}

type Resource struct {
	OriginalType   string `json:"original_type" description:"原始回调类型，为transaction"`
	Algorithm      string `json:"algorithm" description:"对开启结果数据进行加密的加密算法，目前只支持AEAD_AES_256_GCM"`
	Ciphertext     string `json:"ciphertext" description:"Base64编码后的开启/停用结果数据密文"`
	AssociatedData string `json:"associated_data,optional,omitempty" description:"附加数据"`
	Nonce          string `json:"nonce" description:"加密使用的随机串"`
}
